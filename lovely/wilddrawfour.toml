[manifest]
version = "1.0.0"
dump_lua = true
priority = -1

# CardArea:emplace()
[[patches]]
[patches.pattern]
target = "cardarea.lua"
pattern = "function CardArea:emplace(*"
position = "after"
payload = '''
  if not card.debuff and SMODS.has_enhancement(card, "m_wild") then
    local count = 0
    for _, jkr in pairs(SMODS.find_card("j_mf_wilddrawfour"), false) do
      count = count + jkr.ability.extra
    end
    self.config.real_card_limit = (self.config.real_card_limit or self.config.card_limit) + count
    self.config.card_limit = math.max(0, self.config.real_card_limit)
  end'''
match_indent = true

# CardArea:remove_card()
[[patches]]
[patches.pattern]
target = "cardarea.lua"
pattern = "card:remove_from_area()"
position = "before"
payload = '''
if not card.debuff and SMODS.has_enhancement(card, "m_wild") then
  local count = 0
  for _, jkr in pairs(SMODS.find_card("j_mf_wilddrawfour"), false) do
    count = count + jkr.ability.extra
  end
  self.config.real_card_limit = (self.config.real_card_limit or self.config.card_limit) - count
  self.config.card_limit = math.max(0, self.config.real_card_limit)
end'''
match_indent = true

# G.FUNCS.draw_from_deck_to_hand()
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "limit = limit - 1 + (not card.debuff and card.edition and card.edition.card_limit or 0)"
position = "after"
payload = """
if not card.debuff and SMODS.has_enhancement(card, "m_wild") then
  for _, jkr in pairs(SMODS.find_card("j_mf_wilddrawfour"), false) do
    limit = limit + jkr.ability.extra
  end
end
"""
match_indent = true